{"version":3,"sources":["features/appSlice.js","SidebarChannel.js","features/userSlice.js","firebase.js","Sidebar.js","ChatHeader.js","Message.js","Chat.js","Login.js","App.js","app/store.js","index.js"],"names":["appSlice","createSlice","name","initialState","channelId","channelName","reducers","setChannelInfo","state","action","payload","actions","selectChannelId","app","selectChannelName","SidebarChannel","id","dispatch","useDispatch","className","onClick","userSlice","user","login","logout","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Sidebar","useSelector","useState","channels","setChannels","useEffect","collection","onSnapshot","snapshot","docs","map","doc","channel","data","prompt","add","fontSize","InfoOutlined","Avatar","signOut","src","photo","displayName","uid","substring","ChatHeader","placeholder","Message","timestamp","message","Date","toDate","toUTCString","Chat","input","setInput","messages","setMessages","orderBy","value","disabled","onChange","e","target","preventDefault","FieldValue","serverTimestamp","type","Login","alt","Button","signInWithPopup","catch","error","alert","App","onAuthStateChanged","authUser","photoURL","email","store","configureStore","reducer","userReducer","appReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac270f52.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  channelId: null,\r\n  channelName: null,\r\n};\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    setChannelInfo: (state, action) => {\r\n      state.channelId = action.payload.channelId;\r\n      state.channelName = action.payload.channelName;\r\n    },\r\n  },\r\n});\r\nexport const { setChannelInfo } = appSlice.actions;\r\n\r\nexport const selectChannelId = (state) => state.app.channelId;\r\nexport const selectChannelName = (state) => state.app.channelName;\r\nexport default appSlice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./SidebarChannel.css\";\r\nimport { setChannelInfo } from \"./features/appSlice\";\r\nfunction SidebarChannel({ id, channelName }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      className=\"sidebarChannel\"\r\n      onClick={() =>\r\n        dispatch(\r\n          setChannelInfo({\r\n            channelId: id,\r\n            channelName: channelName,\r\n          })\r\n        )\r\n      }\r\n    >\r\n      <h4>\r\n        <span className=\"sidebarChannel__hash\">#</span>\r\n        {channelName}\r\n      </h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChannel;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user: null,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state, action) => {},\n  },\n});\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import firebase from \"firebase\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAWJ1OZUb0qb0COoL_Zk9ClMwG4iGTNz2c\",\r\n  authDomain: \"discord-clone-96f98.firebaseapp.com\",\r\n  projectId: \"discord-clone-96f98\",\r\n  storageBucket: \"discord-clone-96f98.appspot.com\",\r\n  messagingSenderId: \"351651492333\",\r\n  appId: \"1:351651492333:web:07fa0f977654b31b4f77e4\",\r\n  measurementId: \"G-MN5HBNSBE4\",\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport { auth, provider };\r\nexport default db;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarChannel from \"./SidebarChannel\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { InfoOutlined } from \"@material-ui/icons\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"./features/userSlice\";\r\nimport db, { auth } from \"./firebase\";\r\nfunction Sidebar() {\r\n  const user = useSelector(selectUser);\r\n  const [channels, setChannels] = useState([]);\r\n  useEffect(() => {\r\n    db.collection(\"channels\").onSnapshot((snapshot) => {\r\n      setChannels(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          channel: doc.data().channelName,\r\n        }))\r\n      );\r\n    });\r\n  }, []);\r\n  const handleAddChannel = () => {\r\n    const channelName = prompt(\"Enter a new channel name\");\r\n    if (channelName) {\r\n      db.collection(\"channels\").add({\r\n        channelName: channelName,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__top\">\r\n        <h3>Shivanshu</h3>\r\n        <ExpandMoreIcon />\r\n      </div>\r\n      <div className=\"sidebar__channels\">\r\n        <div className=\"sidebar__channelsHeader\">\r\n          <div className=\"sidebar__header\">\r\n            <ExpandMoreIcon />\r\n            <h4>Text Channels</h4>\r\n          </div>\r\n          <AddIcon onClick={handleAddChannel} className=\"sidebar__addChannel\" />\r\n        </div>\r\n        <div className=\"sidebar__channelsList\">\r\n          {channels.map(({ id, channel }) => {\r\n            return <SidebarChannel key={id} id={id} channelName={channel} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__voice\">\r\n        <SignalCellularAltIcon\r\n          className=\"sidebar__voiceIcon\"\r\n          fontSize=\"large\"\r\n        />\r\n        <div className=\"sidebar__voiceInfo\">\r\n          <h3>Voice Connected</h3>\r\n          <p>Stream</p>\r\n        </div>\r\n        <div className=\"sidebar__voiceIcons\">\r\n          <InfoOutlined />\r\n          <CallIcon />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__profile\">\r\n        <Avatar onClick={() => auth.signOut()} src={user.photo} />\r\n        <div className=\"sidebar__profileInfo\">\r\n          <h3>@{user.displayName}</h3>\r\n          <p>#{user.uid.substring(0, 5)}</p>\r\n        </div>\r\n        <div className=\"sidebar__profileIcons\">\r\n          <MicIcon />\r\n          <HeadsetIcon />\r\n          <SettingsIcon />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./ChatHeader.css\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport EditLocationIcon from \"@material-ui/icons/EditLocation\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nfunction ChatHeader({ channelName }) {\r\n  return (\r\n    <div className=\"chatHeader\">\r\n      <div className=\"chatHeader__left\">\r\n        <h3>\r\n          <span className=\"chatHeader__hash\">#</span>\r\n          {channelName}\r\n        </h3>\r\n      </div>\r\n      <div className=\"chatHeader__right\">\r\n        <NotificationsIcon />\r\n        <EditLocationIcon />\r\n        <PeopleAltIcon />\r\n        <div className=\"chatHeader__Search\">\r\n          <input placeholder=\"Search\" />\r\n          <SearchIcon />\r\n        </div>\r\n        <SearchIcon />\r\n        <HelpIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHeader;\r\n","import React from \"react\";\r\nimport \"./Message.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nfunction Message({ timestamp, message, user }) {\r\n  return (\r\n    <div className=\"message\">\r\n      <Avatar src={user.photo} />\r\n      <div className=\"message__info\">\r\n        <h4>\r\n          {user.displayName}\r\n          <span className=\"message__timestamp\">\r\n            {new Date(timestamp?.toDate()).toUTCString()}\r\n          </span>\r\n        </h4>\r\n        <p>{message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\nimport ChatHeader from \"./ChatHeader\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport GifIcon from \"@material-ui/icons/Gif\";\r\nimport Message from \"./Message\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectChannelId, selectChannelName } from \"./features/appSlice\";\r\nimport { selectUser } from \"./features/userSlice\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nfunction Chat() {\r\n  const user = useSelector(selectUser);\r\n  const channelId = useSelector(selectChannelId);\r\n  const channelName = useSelector(selectChannelName);\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  useEffect(() => {\r\n    if (channelId) {\r\n      db.collection(\"channels\")\r\n        .doc(channelId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setMessages(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n  }, [channelId]);\r\n  const sendMessages = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      message: input,\r\n      user: user,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <div className=\"chat\">\r\n      <ChatHeader channelName={channelName} />\r\n      <div className=\"chat__messages\">\r\n        {messages.map((message) => {\r\n          return (\r\n            <Message\r\n              timestamp={message.timestamp}\r\n              message={message.message}\r\n              user={message.user}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"chat__input\">\r\n        <AddCircleIcon fontSize=\"large\" />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            disabled={!channelId}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder={`Message #${channelName}`}\r\n          />\r\n          <button\r\n            onClick={sendMessages}\r\n            className=\"chat__inputButton\"\r\n            type=\"submit\"\r\n          >\r\n            Send Message\r\n          </button>\r\n        </form>\r\n        <div className=\"chat__inputIcons\">\r\n          <CardGiftcardIcon fontSize=\"large\" />\r\n          <GifIcon fontSize=\"large\" />\r\n          <EmojiEmotionsIcon fontSize=\"large\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { auth, provider } from \"./firebase\";\r\nfunction Login() {\r\n  const signIn = () => {\r\n    auth.signInWithPopup(provider).catch((error) => alert(error.message));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__logo\">\r\n        <img\r\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR-5xVcW4c-jfgerd33miAZJ_9lh5nMtu3UWw&usqp=CAU\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <Button onClick={signIn}>Sign In</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport Login from \"./Login\";\nimport { auth } from \"./firebase\";\nimport { login, logout } from \"./features/userSlice\";\nfunction App() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            photo: authUser.photoURL,\n            email: authUser.email,\n            displayName: authUser.displayName,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n    });\n  }, [dispatch]);\n  return (\n    <div className=\"app\">\n      {user ? (\n        <>\n          <Sidebar />\n          <Chat />\n        </>\n      ) : (\n        <Login />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\nimport appReducer from \"../features/appSlice\";\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    app: appReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}